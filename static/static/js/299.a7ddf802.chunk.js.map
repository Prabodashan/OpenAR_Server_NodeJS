{"version":3,"file":"static/js/299.a7ddf802.chunk.js","mappings":"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","sources":["pages/newUser/NewUser.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport \"./newUser.scss\";\r\nimport useAxios from \"../../hooks/axios\";\r\nimport { toast } from \"sonner\";\r\nimport { API_URLS } from \"../../configs/api.urls\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NewUser = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    fullName: \"\",\r\n    emailAddress: \"\",\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n    userType: \"user\",\r\n  });\r\n  const [err, setError] = useState(null);\r\n\r\n  const { error, loading, fetchData } = useAxios();\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => ({ ...prev, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const validate = (values) => {\r\n    const errors = {};\r\n    setError(null);\r\n    const regexp =\r\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*_=+-]).{4,12}$/;\r\n    const regexe = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.emailAddress) {\r\n      errors.emailAddress = \"Email is required!\";\r\n    } else if (!regexe.test(values.emailAddress)) {\r\n      errors.emailAddress = \"This is not Valid email format\";\r\n    }\r\n\r\n    if (!values.fullName) {\r\n      errors.fullName = \"Full Name is required!\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required!\";\r\n    }\r\n    if (!values.userType) {\r\n      errors.userType = \"UserType is required!\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const errorVal = validate(inputs);\r\n    if (Object.keys(errorVal).length !== 0) {\r\n      setError(errorVal);\r\n      return;\r\n    }\r\n\r\n    const response = await fetchData({\r\n      url: API_URLS.CREATE_USER_URL,\r\n      method: \"POST\",\r\n      data: inputs,\r\n    });\r\n\r\n    if (!response.status) {\r\n      return toast.error(response.error.message);\r\n    }\r\n    toast.success(response.success.message);\r\n    navigate(\"/users\", { replace: true });\r\n  };\r\n\r\n  return (\r\n    <div className=\"newUser\">\r\n      <div className=\"top\">\r\n        <h1>Add New User</h1>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <div className=\"left\">\r\n          <img\r\n            src=\"https://icon-library.com/images/no-image-icon/no-image-icon-0.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"right\">\r\n          <form>\r\n            <div className=\"formInput\">\r\n              <label>Full Name</label>\r\n              <input\r\n                name=\"fullName\"\r\n                type=\"text\"\r\n                placeholder=\"john doe\"\r\n                onChange={handleChange}\r\n              />\r\n              {err?.fullName ? (\r\n                <span className=\"errorSpan\">{err.fullName}</span>\r\n              ) : (\r\n                <p>\r\n                  <br />\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"formInput\">\r\n              <label>Email Address</label>\r\n              <input\r\n                name=\"emailAddress\"\r\n                type=\"email\"\r\n                placeholder=\"john_doe@gmail.com\"\r\n                onChange={handleChange}\r\n              />\r\n              {err?.emailAddress ? (\r\n                <span className=\"errorSpan\">{err.emailAddress}</span>\r\n              ) : (\r\n                <p>\r\n                  <br />\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"formInput\">\r\n              <label>Phone</label>\r\n              <input\r\n                name=\"phoneNumber\"\r\n                type=\"text\"\r\n                placeholder=\"+1 234 567 89\"\r\n                onChange={handleChange}\r\n              />\r\n              {err?.phoneNumber ? (\r\n                <span className=\"errorSpan\">{err.phoneNumber}</span>\r\n              ) : (\r\n                <p>\r\n                  <br />\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"formInput\">\r\n              <label>Password</label>\r\n              <input name=\"password\" type=\"Password\" onChange={handleChange} />\r\n              {err?.password ? (\r\n                <span className=\"errorSpan\">{err.password}</span>\r\n              ) : (\r\n                <p>\r\n                  <br />\r\n                </p>\r\n              )}\r\n            </div>\r\n            <div className=\"formInput\">\r\n              <label>User Type</label>\r\n              <div className=\"select-container\">\r\n                <select\r\n                  name=\"userType\"\r\n                  onChange={handleChange}\r\n                  defaultValue=\"user\"\r\n                >\r\n                  <option value=\"admin\">Admin</option>\r\n                  <option value=\"user\">User</option>\r\n                  <option value=\"dev\">Developer</option>\r\n                </select>\r\n              </div>\r\n              {err?.userType ? (\r\n                <span className=\"errorSpan\">{err.userType}</span>\r\n              ) : (\r\n                <p>\r\n                  <br />\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            <button onClick={handleSubmit} disabled={loading}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewUser;\r\n"],"names":["NewUser","navigate","useNavigate","inputs","setInputs","useState","fullName","emailAddress","phoneNumber","password","userType","err","setError","error","loading","fetchData","useAxios","handleChange","e","prev","target","name","value","_jsxs","className","children","_jsx","src","alt","type","placeholder","onChange","defaultValue","onClick","async","preventDefault","errorVal","values","errors","test","validate","Object","keys","length","response","url","API_URLS","CREATE_USER_URL","method","data","status","toast","message","success","replace","disabled"],"sourceRoot":""}