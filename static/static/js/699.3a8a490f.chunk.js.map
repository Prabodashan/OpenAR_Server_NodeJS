{"version":3,"file":"static/js/699.3a8a490f.chunk.js","mappings":"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","sources":["components/table/Table.jsx","components/widget/Widget.jsx","components/featured/Featured.jsx","components/chart/Chart.jsx","pages/home/Home.jsx"],"sourcesContent":["import \"./table.scss\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport Paper from \"@mui/material/Paper\";\r\n\r\nconst List = () => {\r\n  const rows = [\r\n    {\r\n      id: 1143155,\r\n      product: \"Acer Nitro 5\",\r\n      img: \"https://m.media-amazon.com/images/I/81bc8mA3nKL._AC_UY327_FMwebp_QL65_.jpg\",\r\n      customer: \"John Smith\",\r\n      date: \"1 March\",\r\n      amount: 785,\r\n      method: \"Cash on Delivery\",\r\n      status: \"Approved\",\r\n    },\r\n    {\r\n      id: 2235235,\r\n      product: \"Playstation 5\",\r\n      img: \"https://m.media-amazon.com/images/I/31JaiPXYI8L._AC_UY327_FMwebp_QL65_.jpg\",\r\n      customer: \"Michael Doe\",\r\n      date: \"1 March\",\r\n      amount: 900,\r\n      method: \"Online Payment\",\r\n      status: \"Pending\",\r\n    },\r\n    {\r\n      id: 2342353,\r\n      product: \"Redragon S101\",\r\n      img: \"https://m.media-amazon.com/images/I/71kr3WAj1FL._AC_UY327_FMwebp_QL65_.jpg\",\r\n      customer: \"John Smith\",\r\n      date: \"1 March\",\r\n      amount: 35,\r\n      method: \"Cash on Delivery\",\r\n      status: \"Pending\",\r\n    },\r\n    {\r\n      id: 2357741,\r\n      product: \"Razer Blade 15\",\r\n      img: \"https://m.media-amazon.com/images/I/71wF7YDIQkL._AC_UY327_FMwebp_QL65_.jpg\",\r\n      customer: \"Jane Smith\",\r\n      date: \"1 March\",\r\n      amount: 920,\r\n      method: \"Online\",\r\n      status: \"Approved\",\r\n    },\r\n    {\r\n      id: 2342355,\r\n      product: \"ASUS ROG Strix\",\r\n      img: \"https://m.media-amazon.com/images/I/81hH5vK-MCL._AC_UY327_FMwebp_QL65_.jpg\",\r\n      customer: \"Harold Carol\",\r\n      date: \"1 March\",\r\n      amount: 2000,\r\n      method: \"Online\",\r\n      status: \"Pending\",\r\n    },\r\n  ];\r\n  return (\r\n    <TableContainer component={Paper} className=\"table\">\r\n      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className=\"tableCell\">Tracking ID</TableCell>\r\n            <TableCell className=\"tableCell\">Product</TableCell>\r\n            <TableCell className=\"tableCell\">Customer</TableCell>\r\n            <TableCell className=\"tableCell\">Date</TableCell>\r\n            <TableCell className=\"tableCell\">Amount</TableCell>\r\n            <TableCell className=\"tableCell\">Payment Method</TableCell>\r\n            <TableCell className=\"tableCell\">Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className=\"tableCell\">{row.id}</TableCell>\r\n              <TableCell className=\"tableCell\">\r\n                <div className=\"cellWrapper\">\r\n                  <img src={row.img} alt=\"\" className=\"image\" />\r\n                  {row.product}\r\n                </div>\r\n              </TableCell>\r\n              <TableCell className=\"tableCell\">{row.customer}</TableCell>\r\n              <TableCell className=\"tableCell\">{row.date}</TableCell>\r\n              <TableCell className=\"tableCell\">{row.amount}</TableCell>\r\n              <TableCell className=\"tableCell\">{row.method}</TableCell>\r\n              <TableCell className=\"tableCell\">\r\n                <span className={`status ${row.status}`}>{row.status}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\n\r\nimport KeyboardArrowUpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@mui/icons-material/AccountBalanceWalletOutlined\";\r\nimport ShoppingCartOutlinedIcon from \"@mui/icons-material/ShoppingCartOutlined\";\r\nimport MonetizationOnOutlinedIcon from \"@mui/icons-material/MonetizationOnOutlined\";\r\n\r\nimport \"./widget.scss\";\r\nconst Widget = ({ type }) => {\r\n  let data;\r\n\r\n  //temporary\r\n  const amount = 100;\r\n  const diff = 20;\r\n\r\n  switch (type) {\r\n    case \"user\":\r\n      data = {\r\n        title: \"USERS\",\r\n        isMoney: false,\r\n        link: \"See all users\",\r\n        icon: (\r\n          <PersonOutlinedIcon\r\n            className=\"icon\"\r\n            style={{\r\n              color: \"crimson\",\r\n              backgroundColor: \"rgba(255, 0, 0, 0.2)\",\r\n            }}\r\n          />\r\n        ),\r\n      };\r\n      break;\r\n    case \"order\":\r\n      data = {\r\n        title: \"ORDERS\",\r\n        isMoney: false,\r\n        link: \"View all orders\",\r\n        icon: (\r\n          <ShoppingCartOutlinedIcon\r\n            className=\"icon\"\r\n            style={{\r\n              backgroundColor: \"rgba(218, 165, 32, 0.2)\",\r\n              color: \"goldenrod\",\r\n            }}\r\n          />\r\n        ),\r\n      };\r\n      break;\r\n    case \"earning\":\r\n      data = {\r\n        title: \"EARNINGS\",\r\n        isMoney: true,\r\n        link: \"View net earnings\",\r\n        icon: (\r\n          <MonetizationOnOutlinedIcon\r\n            className=\"icon\"\r\n            style={{\r\n              backgroundColor: \"rgba(0, 128, 0, 0.2)\",\r\n              color: \"green\",\r\n            }}\r\n          />\r\n        ),\r\n      };\r\n      break;\r\n    case \"balance\":\r\n      data = {\r\n        title: \"BALANCE\",\r\n        isMoney: true,\r\n        link: \"See details\",\r\n        icon: (\r\n          <AccountBalanceWalletOutlinedIcon\r\n            className=\"icon\"\r\n            style={{\r\n              backgroundColor: \"rgba(128, 0, 128, 0.2)\",\r\n              color: \"purple\",\r\n            }}\r\n          />\r\n        ),\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className=\"widget\">\r\n      <div className=\"left\">\r\n        <span className=\"title\">{data.title}</span>\r\n        <span className=\"counter\">\r\n          {data.isMoney && \"$\"} {amount}\r\n        </span>\r\n        <span className=\"link\">{data.link}</span>\r\n      </div>\r\n      <div className=\"right\">\r\n        <div className=\"percentage positive\">\r\n          <KeyboardArrowUpIcon />\r\n          {diff} %\r\n        </div>\r\n        {data.icon}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import \"./featured.scss\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport { CircularProgressbar } from \"react-circular-progressbar\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport KeyboardArrowDownIcon from \"@mui/icons-material/KeyboardArrowDown\";\r\nimport KeyboardArrowUpOutlinedIcon from \"@mui/icons-material/KeyboardArrowUpOutlined\";\r\n\r\nconst Featured = () => {\r\n  return (\r\n    <div className=\"featured\">\r\n      <div className=\"top\">\r\n        <h1 className=\"title\">Total Revenue</h1>\r\n        <MoreVertIcon fontSize=\"small\" />\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <div className=\"featuredChart\">\r\n          <CircularProgressbar value={70} text={\"70%\"} strokeWidth={5} />\r\n        </div>\r\n        <p className=\"title\">Total sales made today</p>\r\n        <p className=\"amount\">$420</p>\r\n        <p className=\"desc\">\r\n          Previous transactions processing. Last payments may not be included.\r\n        </p>\r\n        <div className=\"summary\">\r\n          <div className=\"item\">\r\n            <div className=\"itemTitle\">Target</div>\r\n            <div className=\"itemResult negative\">\r\n              <KeyboardArrowDownIcon fontSize=\"small\" />\r\n              <div className=\"resultAmount\">$12.4k</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <div className=\"itemTitle\">Last Week</div>\r\n            <div className=\"itemResult positive\">\r\n              <KeyboardArrowUpOutlinedIcon fontSize=\"small\" />\r\n              <div className=\"resultAmount\">$12.4k</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <div className=\"itemTitle\">Last Month</div>\r\n            <div className=\"itemResult positive\">\r\n              <KeyboardArrowUpOutlinedIcon fontSize=\"small\" />\r\n              <div className=\"resultAmount\">$12.4k</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nimport \"./chart.scss\";\r\n\r\nconst data = [\r\n  { name: \"January\", Total: 1200 },\r\n  { name: \"February\", Total: 2100 },\r\n  { name: \"March\", Total: 800 },\r\n  { name: \"April\", Total: 1600 },\r\n  { name: \"May\", Total: 900 },\r\n  { name: \"June\", Total: 1700 },\r\n];\r\n\r\nconst Chart = ({ aspect, title }) => {\r\n  return (\r\n    <div className=\"chart\">\r\n      <div className=\"title\">{title}</div>\r\n      <ResponsiveContainer width=\"100%\" aspect={aspect}>\r\n        <AreaChart\r\n          width={730}\r\n          height={250}\r\n          data={data}\r\n          margin={{ top: 10, right: 30, left: 0, bottom: 0 }}\r\n        >\r\n          <defs>\r\n            <linearGradient id=\"total\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n              <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8} />\r\n              <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0} />\r\n            </linearGradient>\r\n          </defs>\r\n          <XAxis dataKey=\"name\" stroke=\"gray\" />\r\n          <CartesianGrid strokeDasharray=\"3 3\" className=\"chartGrid\" />\r\n          <Tooltip />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey=\"Total\"\r\n            stroke=\"#8884d8\"\r\n            fillOpacity={1}\r\n            fill=\"url(#total)\"\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\n\r\nimport \"./home.scss\";\r\n\r\nimport Widget from \"../../components/widget/Widget\";\r\nimport Featured from \"./../../components/featured/Featured\";\r\nimport Chart from \"../../components/chart/Chart\";\r\nimport Table from \"../../components/table/Table\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"widgets\">\r\n        <Widget type=\"user\" />\r\n        <Widget type=\"order\" />\r\n        <Widget type=\"earning\" />\r\n        <Widget type=\"balance\" />\r\n      </div>\r\n      <div className=\"charts\">\r\n        <Featured />\r\n        <Chart title=\"Last 6 Months (Revenue)\" aspect={4 / 1} />\r\n      </div>\r\n      <div className=\"listContainer\">\r\n        <div className=\"listTitle\">Latest Transactions</div>\r\n        <Table />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["List","_jsx","TableContainer","component","Paper","className","children","_jsxs","Table","sx","minWidth","TableHead","TableRow","TableCell","TableBody","id","product","img","customer","date","amount","method","status","map","row","src","alt","_ref","data","type","title","isMoney","link","icon","PersonOutlinedIcon","style","color","backgroundColor","ShoppingCartOutlinedIcon","MonetizationOnOutlinedIcon","AccountBalanceWalletOutlinedIcon","KeyboardArrowUpIcon","Featured","MoreVertIcon","fontSize","CircularProgressbar","value","text","strokeWidth","KeyboardArrowDownIcon","KeyboardArrowUpOutlinedIcon","name","Total","aspect","ResponsiveContainer","width","AreaChart","height","margin","top","right","left","bottom","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","stroke","CartesianGrid","strokeDasharray","Tooltip","Area","fillOpacity","fill","Home","Widget","Chart"],"sourceRoot":""}